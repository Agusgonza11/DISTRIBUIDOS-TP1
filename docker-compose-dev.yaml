name: tp0
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    networks:
    - testing_net
    ports:
    - 15672:15672
    - 5672:5672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 50s
  client:
    container_name: client
    image: client:latest
    entrypoint: /client
    environment:
    - CLI_ID=1
    - CLI_LOG_LEVEL=DEBUG
    volumes:
    - ./client/data:/app/data
    networks:
    - testing_net
    depends_on:
    - input_gateway
    - output_gateway
  input_gateway:
    container_name: input_gateway
    image: input_gateway:latest
    entrypoint: /input_gateway
    environment:
    - CLI_LOG_LEVEL=DEBUG
    - CONSULTA_1_FILTER=2
    - CONSULTA_2_FILTER=2
    - CONSULTA_3_FILTER=2
    - CONSULTA_4_FILTER=2
    - CONSULTA_5_FILTER=2
    - CONSULTA_3_JOIN=1
    - CONSULTA_4_JOIN=1
    ports:
    - 5000:5000
    - 5001:5001
    - 5002:5002
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    links:
    - rabbitmq
  output_gateway:
    container_name: output_gateway
    image: output_gateway:latest
    entrypoint: /output_gateway
    environment:
    - CLI_LOG_LEVEL=DEBUG
    - CONSULTA_1_EOF_COUNT=2
    ports:
    - 6000:6000
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    links:
    - rabbitmq
  filter1:
    container_name: filter1
    image: filter:latest
    entrypoint: python3 workers/filter.py
    environment:
    - WORKER_ID=1
    - WORKER_TYPE=FILTER
    - CONSULTAS=1
    - CANT_NODOS_PNL=3
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  filter2:
    container_name: filter2
    image: filter:latest
    entrypoint: python3 workers/filter.py
    environment:
    - WORKER_ID=2
    - WORKER_TYPE=FILTER
    - CONSULTAS=2
    - CANT_NODOS_PNL=3
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  filter3:
    container_name: filter3
    image: filter:latest
    entrypoint: python3 workers/filter.py
    environment:
    - WORKER_ID=3
    - WORKER_TYPE=FILTER
    - CONSULTAS=3
    - CANT_NODOS_PNL=3
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  filter4:
    container_name: filter4
    image: filter:latest
    entrypoint: python3 workers/filter.py
    environment:
    - WORKER_ID=4
    - WORKER_TYPE=FILTER
    - CONSULTAS=4
    - CANT_NODOS_PNL=3
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  filter5:
    container_name: filter5
    image: filter:latest
    entrypoint: python3 workers/filter.py
    environment:
    - WORKER_ID=5
    - WORKER_TYPE=FILTER
    - CONSULTAS=5
    - CANT_NODOS_PNL=3
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  filter6:
    container_name: filter6
    image: filter:latest
    entrypoint: python3 workers/filter.py
    environment:
    - WORKER_ID=6
    - WORKER_TYPE=FILTER
    - CONSULTAS=1
    - CANT_NODOS_PNL=3
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  filter7:
    container_name: filter7
    image: filter:latest
    entrypoint: python3 workers/filter.py
    environment:
    - WORKER_ID=7
    - WORKER_TYPE=FILTER
    - CONSULTAS=2
    - CANT_NODOS_PNL=3
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  filter8:
    container_name: filter8
    image: filter:latest
    entrypoint: python3 workers/filter.py
    environment:
    - WORKER_ID=8
    - WORKER_TYPE=FILTER
    - CONSULTAS=3
    - CANT_NODOS_PNL=3
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  filter9:
    container_name: filter9
    image: filter:latest
    entrypoint: python3 workers/filter.py
    environment:
    - WORKER_ID=9
    - WORKER_TYPE=FILTER
    - CONSULTAS=4
    - CANT_NODOS_PNL=3
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  filter10:
    container_name: filter10
    image: filter:latest
    entrypoint: python3 workers/filter.py
    environment:
    - WORKER_ID=10
    - WORKER_TYPE=FILTER
    - CONSULTAS=5
    - CANT_NODOS_PNL=3
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  joiner1:
    container_name: joiner1
    image: joiner:latest
    entrypoint: python3 workers/joiner.py
    environment:
    - WORKER_ID=1
    - WORKER_TYPE=JOINER
    - CONSULTAS=3,4
    - EOF_ESPERADOS=3:2,4:2
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  aggregator1:
    container_name: aggregator1
    image: aggregator:latest
    entrypoint: python3 workers/aggregator.py
    environment:
    - WORKER_ID=1
    - WORKER_TYPE=AGGREGATOR
    - CONSULTAS=2,3,4,5
    - EOF_ESPERADOS=2:2,3:1,4:1,5:3
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  pnl1:
    container_name: pnl1
    image: pnl:latest
    entrypoint: python3 workers/pnl.py
    environment:
    - WORKER_ID=1
    - WORKER_TYPE=PNL
    - CONSULTAS=5
    - EOF_ESPERADOS=5:2
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  pnl2:
    container_name: pnl2
    image: pnl:latest
    entrypoint: python3 workers/pnl.py
    environment:
    - WORKER_ID=2
    - WORKER_TYPE=PNL
    - CONSULTAS=5
    - EOF_ESPERADOS=5:2
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  pnl3:
    container_name: pnl3
    image: pnl:latest
    entrypoint: python3 workers/pnl.py
    environment:
    - WORKER_ID=3
    - WORKER_TYPE=PNL
    - CONSULTAS=5
    - EOF_ESPERADOS=5:2
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
  broker:
    container_name: broker
    image: broker:latest
    entrypoint: python3 workers/broker.py
    environment:
    - EOF_ESPERADOS=3:2,4:2
    - EOF_ENVIAR=2:2,3:1,4:1,5:3
    - JOINERS=1:[3, 4]
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
networks:
  testing_net:
    ipam:
      driver: default
      config:
      - subnet: 172.25.125.0/24
